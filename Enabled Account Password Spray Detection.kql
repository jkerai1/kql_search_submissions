//This query detects potential password spray attacks by comparing failed logon attempts against historical averages
//Focuses on enabled accounts with significant deviations from normal failed logon rates
let lookback = 14d;
let AverageFailedLogonPerUser = IdentityLogonEvents
| where TimeGenerated > ago(lookback)
| where isnotempty(AccountUpn)
| where ActionType == "LogonFailed"
| project TimeGenerated, AccountUpn = tolower(AccountUpn), ActionType
| summarize FailedLogonsPerMinute = count() by bin(TimeGenerated, 1m), AccountUpn
| summarize FailedLogonAverage = avg(FailedLogonsPerMinute) by AccountUpn
| extend FailedLogonAverageRounded = round(FailedLogonAverage);
let EnabledAccounts = IdentityInfo
| where TimeGenerated >= ago(lookback) 
| where IsAccountEnabled
| where isnotempty(AccountUPN)
| project AccountUPN = tolower(AccountUPN)
| distinct AccountUPN;
SigninLogs
| where TimeGenerated >= ago(1h)
| where IsInteractive
| where isnotempty(ResultDescription)
| summarize UnknownIPs = make_set(IPAddress) by bin(TimeGenerated, 1m), UserPrincipalName, AppDisplayName
| where UserPrincipalName has_any (EnabledAccounts)
| extend NumberOfFailedAttemptsPerMinute = array_length(UnknownIPs), UserPrincipalName = tolower(UserPrincipalName)
| join kind=inner AverageFailedLogonPerUser on $left.UserPrincipalName == $right.AccountUpn
| where NumberOfFailedAttemptsPerMinute > FailedLogonAverageRounded
| project-away AccountUpn 